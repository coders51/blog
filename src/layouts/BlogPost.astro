---
import type { CollectionEntry } from "astro:content";
import Author from "../components/Author.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { ClockIcon } from "../components/icons/ClockIcon";
import Layout from "./Layout.astro";
import TableOfContents from "src/components/TableOfContents.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const {
  title,
  description,
  pubDate,
  updatedDate,
  author,
  heroImage,
  keywords,
  timeRead
} = post.data;

const { headings } = await post.render();
---

<Layout
  title={title}
  description={description}
  headings={headings}
  heroImage={heroImage}
  keywords={keywords}
  author={author}
>
  <div class="px-10 pb-10 sm:px-0">
    <h1 class="text-center">{title}</h1>
    <div class="flex flex-col gap-y-2 text-sm">
      <div class="flex items-center space-x-2">
        <FormattedDate date={pubDate} />
        <span>â€¢</span>
        <Author author={author} />
      </div>
      {
        timeRead && (
          <div class="flex items-center space-x-1">
            <ClockIcon customClassName="w-5 h-5" />
            <span class="text-sm text-coders51 dark:text-coders51dark">
              {timeRead} min read
            </span>
          </div>
        )
      }
      {
        updatedDate && (
          <div class="flex rounded-lg px-2 py-1 space-x-1 bg-coders51/10 dark:bg-black/30 w-fit">
            <span class="text-coders51 dark:text-coders51dark">
              Last updated on:{" "}
            </span>
            <FormattedDate date={updatedDate} icon={false} />
          </div>
        )
      }
    </div>
    <div class="my-10 xl:hidden block">
      <TableOfContents headings={headings} />
    </div>
    <hr />
    <slot />
  </div>
</Layout>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const headerHeight = document.querySelector("#header")?.offsetHeight;

    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener("click", function (e) {
        e.preventDefault();

        const targetId = anchor?.getAttribute("href")?.slice(1);

        if (targetId === undefined) return;

        const targetElement = document.getElementById(targetId);

        if (targetElement) {
          const offsetTop =
            targetElement.getBoundingClientRect().top + window.scrollY;
          window.scrollTo({
            top: offsetTop - headerHeight,
            behavior: "smooth"
          });
        }
      });
    });
  });
</script>
