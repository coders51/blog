---
import TableOfContents from "src/components/TableOfContents.astro";
import BaseHead from "../components/BaseHead.astro";
import Footer from "src/components/Footer.astro";
import Header from "src/components/Header.astro";

const { title, description, headings, heroImage, keywords, author } =
  Astro.props;
---

<html
  lang="en"
  class="min-h-screen bg-lightBg bg-gradientLight dark:bg-darkBg dark:bg-gradientDark bg-center bg-cover bg-no-repeat bg-fixed"
>
  <head>
    <BaseHead
      title={title}
      description={description}
      heroImage={heroImage}
      keywords={keywords}
      author={author}
    />
  </head>
  <body>
    <div class="min-h-screen flex flex-col justify-between">
      <Header />
      <main class="mb-auto mt-20">
        <article>
          <div class="flex items-start justify-center">
            {
              headings?.length > 0 && (
                <aside class="sticky top-[6.5rem] order-2 ml-6 -me-32 hidden xl:block">
                  <TableOfContents headings={headings} />
                </aside>
              )
            }
            <div class="flex flex-col items-center w-full xl:w-auto">
              {
                heroImage && (
                  <img
                    src={`/posts/${heroImage}`}
                    alt={title}
                    class="w-full xl:w-auto flex object-cover xl:mt-8 xl:rounded max-h-96"
                  />
                )
              }
              <div
                class="prose prose-sky w-full sm:pt-6 pt-4 xl:prose-xl lg:prose-lg dark:prose-slate dark:prose-invert marker:text-black prose-a:underline-offset-2 prose-blockquote:border-l-coders51 prose-code:text-white dark:marker:text-white prose-blockquote:dark:border-l-white"
              >
                <slot />
              </div>
            </div>
          </div>
        </article>
      </main>
      <Footer />
    </div>
    <script is:inline>
      document.addEventListener("astro:after-swap", () => {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        }
      });

      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      const cl = document.documentElement.classList;
      const themeAlreadyApplied = cl.contains("light") || cl.contains("dark");
      if (!themeAlreadyApplied) {
        cl.add(localStorage.theme);
      }
      const meta = document.querySelector("meta[name=color-scheme]");
      if (meta) {
        if (theme === "dark") {
          meta.content = "dark light";
        } else if (theme === "light") {
          meta.content = "light dark";
        }
      }
    </script>
  </body>
</html>
